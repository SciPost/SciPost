# Generated by Django 5.0.12 on 2025-03-20 14:59

import django.db.models.deletion
import uuid
from django.db import migrations, models


def create_records_for_existing_anonymizations(apps, schema_editor):
    """
    Create records for existing anonymizations.
    This function is called in the migration to create records for existing anonymizations.
    """
    import re

    ContributorAnonymization = apps.get_model(
        "anonymization", "ContributorAnonymization"
    )
    ProfileAnonymization = apps.get_model("anonymization", "ProfileAnonymization")
    AnonymousContributor = apps.get_model("anonymization", "AnonymousContributor")
    AnonymousProfile = apps.get_model("anonymization", "AnonymousProfile")

    # Create records for existing anonymized contributors and profiles
    contributor_anonymizations = [
        ContributorAnonymization(uuid=uuid[0], original=None, anonymous=ac)
        for ac in AnonymousContributor.objects.all()
        if (
            uuid := re.findall(
                r"^[0-9a-f\-]{36}$",
                ac.profile.last_name if ac.profile else ac.user.last_name,
            )
        )
    ]
    profile_anonymizations = [
        ProfileAnonymization(uuid=uuid[0], original=None, anonymous=ap)
        for ap in AnonymousProfile.objects.all()
        if (uuid := re.findall(r"^[0-9a-f\-]{36}$", ap.last_name))
    ]

    ContributorAnonymization.objects.bulk_create(contributor_anonymizations)
    ProfileAnonymization.objects.bulk_create(profile_anonymizations)


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("profiles", "0045_profile_is_anonymous"),
        ("scipost", "0042_contributor_is_anonymous"),
    ]

    operations = [
        migrations.CreateModel(
            name="AnonymousContributor",
            fields=[],
            options={
                "verbose_name": "Anonymous Contributor",
                "verbose_name_plural": "Anonymous Contributors",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("scipost.contributor",),
        ),
        migrations.CreateModel(
            name="AnonymousProfile",
            fields=[],
            options={
                "verbose_name": "Anonymous Profile",
                "verbose_name_plural": "Anonymous Profiles",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("profiles.profile",),
        ),
        migrations.CreateModel(
            name="ContributorAnonymization",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "anonymous",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="eponymization",
                        to="anonymization.anonymouscontributor",
                    ),
                ),
                (
                    "original",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="anonymizations",
                        to="scipost.contributor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProfileAnonymization",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "anonymous",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="eponymization",
                        to="anonymization.anonymousprofile",
                    ),
                ),
                (
                    "original",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="anonymizations",
                        to="profiles.profile",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="contributoranonymization",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("original_id", models.F("anonymous_id")), _negated=True
                ),
                name="original_anonymous_contributor_different",
                violation_error_message="Anonymized contributor must be different from the original contributor.",
            ),
        ),
        migrations.AddConstraint(
            model_name="profileanonymization",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("original_id", models.F("anonymous_id")), _negated=True
                ),
                name="original_anonymous_profile_different",
                violation_error_message="Anonymized profile must be different from the original profile.",
            ),
        ),
        migrations.RunPython(
            create_records_for_existing_anonymizations,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
