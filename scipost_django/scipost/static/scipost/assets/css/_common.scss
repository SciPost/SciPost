// HTMX component styling
.htmx-crud-button-actions {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
    visibility: hidden;
}

// set visibility of actions if any parent is hovered   
.htmx-crud-element:hover {
    & .htmx-crud-button-actions {
        visibility: visible;
    }
}


.hx-dynsel {
    position: relative;

    select {
        all: unset;
        min-width: 10%;
        text-wrap: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
        pointer-events: none;
        background-color: rgba(10, 10, 255, 0.1);
        padding: 0.1rem 0.5rem;
        border-radius: 0.25rem;
    }

    ul {
        margin-bottom: 0;
    }

    // Input Styling
    .input-query-container {
        width: 100%;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        height: 3em;
        display: flex;
        align-items: center;
        gap: 0.5em;
        padding: 0.5rem;

        >input {
            flex: 1;
            padding: 0.25em;
            border: 0;
            min-width: 10ch;

            &:focus,
            &:focus-visible {
                border: 0;
                outline-color: unset;
            }
        }

        >.selected-items {

            &:empty {
                display: none;
            }

            >.selected-item {
                background: rgba(10, 10, 255, 0.1);
                padding: 0.25em;
                overflow: hidden;
                text-wrap: nowrap;
                text-overflow: ellipsis;
                flex-shrink: 1;

                &::after {
                    content: "x";
                    color: red;
                }
            }
        }
    }

    // Results Styling
    .result-list {
        display: none;
        position: absolute;
        top: 100%;
        margin-top: 0.5rem;
        background-color: white;
        overflow-y: scroll;
        z-index: 1;
        max-height: 30vh;
        width: 100%;
        padding: 0.25rem;

        &:empty {
            display: none;
        }

        >.result-item {
            display: block;
            padding: 0.1rem;

            &:hover {
                background-color: var(--bs-primary);
                color: white;
                cursor: pointer;
            }

        }
    }

    // Display results on focus 
    &:focus-within .result-list {
        display: flex;
        flex-direction: column;
        box-shadow: 0 0.5rem 1rem 0 rgba(108, 108, 108, 0.5);
        border: 2px solid var(--bs-secondary);
        border-radius: 0.25rem;
    }

}

// HTML bootstrap-like components
.hcard {
    --sp-hcard-bg-color: transparent;
    --sp-hcard-outline-color: #{$body-color};

    border: 1px solid var(--sp-hcard-outline-color);

    >*:first-child {
        padding: 0.25rem;
        // It would have been background-color: var(--sp-hcard-bg-color), 
        // but I need components to be separated for the opacity to work
        background-color: rgba(var(--sp-hcard-bg-color-r), var(--sp-hcard-bg-color-g), var(--sp-hcard-bg-color-b), var(--#{$prefix}bg-opacity, 1));

        >* {
            margin: 0;
        }
    }

    >*:not(:first-child) {
        margin: 0;
        padding: 0.25rem 0.5rem 0.5rem 0.5rem;
    }
}

@each $color, $value in $theme-colors {
    .hcard-#{$color} {
        --sp-hcard-bg-color: #{$value};
        --sp-hcard-bg-color-r: #{red($value)};
        --sp-hcard-bg-color-g: #{green($value)};
        --sp-hcard-bg-color-b: #{blue($value)};
        --sp-hcard-outline-color: #{$value};
    }
}