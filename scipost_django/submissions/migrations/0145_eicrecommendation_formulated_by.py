# Generated by Django 3.2.18 on 2024-02-12 15:19

from django.db import migrations, models
import django.db.models.deletion


def set_formulated_by(apps, schema_editor):
    from submissions.models import EICRecommendation, EditorialAssignment
    from django.db.models import OuterRef, Subquery, F
    from django.db.models.functions import Coalesce

    latest_assignment_prior_to_recommendation = (
        EditorialAssignment.objects.filter(
            submission=OuterRef("submission"),
            date_created__lte=OuterRef("date_submitted"),
            status__in=[
                EditorialAssignment.STATUS_ACCEPTED,
                EditorialAssignment.STATUS_COMPLETED,
                EditorialAssignment.STATUS_REPLACED,
            ],
        )
        .order_by("-date_created")
        .values("to")[:1]
    )

    recommendations = EICRecommendation.objects.all().annotate(
        submission_eic=F("submission__editor_in_charge"),
        latest_assignment=Subquery(latest_assignment_prior_to_recommendation),
    )

    # Update formulated_by for all EICRecommendations
    for rec in recommendations:
        if rec.formulated_by_id is None:
            rec.formulated_by_id = rec.latest_assignment or rec.submission_eic
            rec.save()


class Migration(migrations.Migration):

    dependencies = [
        ("scipost", "0040_auto_20210310_2026"),
        ("submissions", "0144_enable_unaccent"),
    ]

    operations = [
        migrations.AddField(
            model_name="eicrecommendation",
            name="formulated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="eic_recommendations_formulated",
                to="scipost.contributor",
            ),
        ),
        migrations.RunPython(set_formulated_by),
    ]
