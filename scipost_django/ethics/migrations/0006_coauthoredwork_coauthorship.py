# Generated by Django 5.2.5 on 2025-09-02 10:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("ethics", "0005_genaidisclosure_and_more"),
        ("profiles", "0049_profile_full_name_profile_full_name_original_and_more"),
        ("scipost", "0045_alter_totpdevice_token"),
    ]

    operations = [
        migrations.CreateModel(
            name="CoauthoredWork",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("server_source", models.CharField(max_length=64)),
                ("work_type", models.CharField(max_length=64)),
                ("identifier", models.CharField(blank=True, max_length=256, null=True)),
                ("doi", models.CharField(blank=True, max_length=256, null=True)),
                ("title", models.CharField(max_length=512)),
                (
                    "authors_str",
                    models.TextField(
                        help_text="Semicolon-separated list of authors with comma-separated name parts."
                    ),
                ),
                ("date_published", models.DateField(blank=True, null=True)),
                ("date_updated", models.DateField(blank=True, null=True)),
                ("date_fetched", models.DateField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("server_source", "identifier"),
                        name="unique_coauthored_work_id",
                        nulls_distinct=True,
                        violation_error_message="A coauthored work with this server and identifier already exists.",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Coauthorship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("unverified", "Unverified"),
                            ("verified", "Verified"),
                            ("deprecated", "Deprecated"),
                        ],
                        default="unverified",
                        max_length=16,
                    ),
                ),
                ("created", models.DateTimeField(blank=True, null=True)),
                ("modified", models.DateTimeField(blank=True, null=True)),
                (
                    "coauthor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_coauthorships",
                        to="profiles.profile",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coauthorships",
                        to="profiles.profile",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="coauthorships_verified",
                        to="scipost.contributor",
                    ),
                ),
                (
                    "work",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coauthorships",
                        to="ethics.coauthoredwork",
                    ),
                ),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
    ]
