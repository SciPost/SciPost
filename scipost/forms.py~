from django import forms

class RegistrationForm(forms.Form):
    PROF = 'PR'
    DR = 'DR'
    MR = 'MR'
    MRS = 'MS'
    TITLE_CHOICES = (
        (PROF, 'Prof.'),
        (DR, 'Dr'),
        (MR, 'Mr'),
        (MRS, 'Mrs'),
        )
    title = forms.ChoiceField(choices=TITLE_CHOICES)
    first_name = forms.CharField(label='First name', max_length=100)
    last_name = forms.CharField(label='Last name', max_length=100)
    email = forms.EmailField(label='email')
    affiliation = forms.CharField(label='Affiliation', max_length=300)
    address = forms.CharField(label='Address', max_length=1000)
    personalwebpage = forms.URLField(label='Personal web page')
    username = forms.CharField(label='username', max_length=100)
    password = forms.CharField(label='password', widget=forms.PasswordInput())

class VetRegistrationForm(forms.Form):
    promote_to_rank_1 = forms.BooleanField()
    REFUSAL_CHOICES = (
        (0, '-'),
        (-1, 'not a professional scientist (>= PhD student)'),
        (-2, 'another account already exists for this person'),
        (-3, 'barred from SciPost (abusive behaviour)'),
        )
    refusal_reason = forms.ChoiceField(REFUSAL_CHOICES)
    email_response_field = forms.CharField(widget=forms.Textarea(), label='email comment (optional)')

class AuthenticationForm(forms.Form):
    username = forms.CharField(label='username', max_length=100)
    password = forms.CharField(label='password', widget=forms.PasswordInput())

class InitiateCommentaryForm(forms.Form):
    pub_title = forms.CharField(max_length=300)
    pub_DOI_link = forms.URLField(label='DOI link to the original publication')
    author_list = forms.CharField(max_length=1000)
    pub_date = forms.DateField()
    pub_abstract = forms.CharField(widget=forms.Textarea) # need TextField but doesn't exist
    
class CommentarySearchForm(forms.Form):
    pub_title_keyword = forms.CharField(max_length=100, label="title keyword", required=False)
    pub_author = forms.CharField(max_length=100, required=False)

class CommentForm(forms.Form):
    comment_text = forms.CharField(widget=forms.Textarea(attrs={'rows': 10, 'cols':80}), label='') # need TextField but doesn't exist

class CommentRatingForm(forms.Form):
    RATING_CHOICES = (
#        (5, '5 (highest)'), (4, '4'), (3, '3 (average)'), (2, '2'), (1, '1 (low)')
        (100, '100%'), (90, '90%'), (80, '80%'), (70, '70%'), (60, '60%'), (50, '50%'), (40, '40%'), (30, '30%'), (20, '20%'), (10, '10%'), (0, '0%')
        )
    clarity = forms.ChoiceField(RATING_CHOICES)
    correctness = forms.ChoiceField(RATING_CHOICES)
    usefulness = forms.ChoiceField(RATING_CHOICES)

