# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-04-15 17:52
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('submissions', '0001_initial'),
        ('comments', '__first__'),
        ('commentaries', '0003_auto_20160401_0642'),
        ('theses', '0001_initial'),
        ('scipost', '0003_auto_20160330_1104'),
    ]

    operations = [
        migrations.CreateModel(
            name='Graph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('commentaries', models.ManyToManyField(blank=True, related_name='list_commentaries', to='commentaries.Commentary')),
                ('comments', models.ManyToManyField(blank=True, related_name='list_comments', to='comments.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('established', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.AddField(
            model_name='contributor',
            name='invitation_key',
            field=models.CharField(blank=True, default='', max_length=40, null=True),
        ),
        migrations.AddField(
            model_name='contributor',
            name='specializations',
            field=django.contrib.postgres.fields.jsonb.JSONField(default={}),
        ),
        migrations.AlterField(
            model_name='registrationinvitation',
            name='invitation_type',
            field=models.CharField(choices=[('F', 'Editorial Fellow'), ('C', 'Contributor'), ('R', 'Refereeing')], default='C', max_length=2),
        ),
        migrations.AddField(
            model_name='team',
            name='leader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scipost.Contributor'),
        ),
        migrations.AddField(
            model_name='team',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='team_members', to='scipost.Contributor'),
        ),
        migrations.AddField(
            model_name='node',
            name='added_by',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='scipost.Contributor'),
        ),
        migrations.AddField(
            model_name='node',
            name='arcs_in',
            field=models.ManyToManyField(blank=True, related_name='node_arcs_in', to='scipost.Node'),
        ),
        migrations.AddField(
            model_name='node',
            name='commentaries',
            field=models.ManyToManyField(blank=True, related_name='node_commentaries', to='commentaries.Commentary'),
        ),
        migrations.AddField(
            model_name='node',
            name='graph',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='scipost.Graph'),
        ),
        migrations.AddField(
            model_name='node',
            name='submissions',
            field=models.ManyToManyField(blank=True, related_name='node_submissions', to='submissions.Submission'),
        ),
        migrations.AddField(
            model_name='node',
            name='thesislinks',
            field=models.ManyToManyField(blank=True, related_name='node_thesislinks', to='theses.ThesisLink'),
        ),
        migrations.AddField(
            model_name='list',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scipost.Contributor'),
        ),
        migrations.AddField(
            model_name='list',
            name='submissions',
            field=models.ManyToManyField(blank=True, related_name='list_submissions', to='submissions.Submission'),
        ),
        migrations.AddField(
            model_name='list',
            name='teams_with_access',
            field=models.ManyToManyField(blank=True, to='scipost.Team'),
        ),
        migrations.AddField(
            model_name='list',
            name='thesislinks',
            field=models.ManyToManyField(blank=True, related_name='list_thesislinks', to='theses.ThesisLink'),
        ),
        migrations.AddField(
            model_name='graph',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scipost.Contributor'),
        ),
        migrations.AddField(
            model_name='graph',
            name='teams_with_access',
            field=models.ManyToManyField(blank=True, to='scipost.Team'),
        ),
    ]
