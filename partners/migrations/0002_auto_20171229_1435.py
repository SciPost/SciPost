# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-12-29 13:35
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import scipost.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('partners', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('scipost', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='prospectivepartnerevent',
            name='noted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=models.SET(scipost.models.get_sentinel_user), to='scipost.Contributor'),
        ),
        migrations.AddField(
            model_name='prospectivepartnerevent',
            name='prospartner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.ProspectivePartner'),
        ),
        migrations.AddField(
            model_name='prospectivecontact',
            name='prospartner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prospective_contacts', to='partners.ProspectivePartner'),
        ),
        migrations.AddField(
            model_name='partnersattachment',
            name='agreement',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='partners.MembershipAgreement'),
        ),
        migrations.AddField(
            model_name='partnerevent',
            name='noted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='partnerevent',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='partners.Partner'),
        ),
        migrations.AddField(
            model_name='partner',
            name='institution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='partners.Institution'),
        ),
        migrations.AddField(
            model_name='partner',
            name='main_contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partner_main_contact', to='partners.Contact'),
        ),
        migrations.AddField(
            model_name='membershipagreement',
            name='consortium',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='partners.Consortium'),
        ),
        migrations.AddField(
            model_name='membershipagreement',
            name='partner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agreements', to='partners.Partner'),
        ),
        migrations.AddField(
            model_name='contactrequest',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.Partner'),
        ),
        migrations.AddField(
            model_name='contact',
            name='consortia',
            field=models.ManyToManyField(blank=True, help_text='All Consortia for which the Contact has explicit permission to view/edit its data.', to='partners.Consortium'),
        ),
        migrations.AddField(
            model_name='contact',
            name='partners',
            field=models.ManyToManyField(help_text='All Partners (+related Institutions) the Contact is related to.', to='partners.Partner'),
        ),
        migrations.AddField(
            model_name='contact',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='partner_contact', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='consortium',
            name='partners',
            field=models.ManyToManyField(blank=True, to='partners.Partner'),
        ),
    ]
